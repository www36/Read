1. Java 8 新特性 Stream 以声明性方式写的： 说明想要完成什么，而不是如何实现一个操作
2. 集合是数据结构，主要目的是以特定的 时间/空间 复杂度存储和访问元素
   流的目的在于表达计算
3. Stream（流）常用的数据处理操作： 
   中间操作：
      filter(筛选)     返回一个包含了所有符合谓词元素的流 
      map(映射)
      flatMap(扁平流)  把一个流中的每个值都换成另一个流，然后把所有的流连接起来成为一个流
      reduce(归约)     
      find(查询) 
      match(匹配) 
      sort(排序)
      limit(截断)      返回一个不超过给定长度的流。
      skip(跳过)       返回一个扔掉了前 n 个元素的流，如果流中元素不足 n 个，则返回空流，与 limit 互补
      distinct(去重)   返回一个元素各异的流。
   终端操作：
      forEach         消费流中的每个元素并对其应用 Lambda，这一操作返回 void
      count           返回流中元素个数，这一操作返回 long
      collect         把流归约成一个集合，比如 List、Map 甚至是 Integer
      allMatch        检查谓词是否匹配所有元素
      anyMatch        检查谓词是否至少匹配一个元素
      noneMatch       没有任何元素与给定的谓词匹配
      findFirst       查找第一个元素
      findAny         返回当前流中的任意元素
4. 流 是概念上固定的数据结构，其元素是按需计算的，就像管理学中的需求驱动：只有在消费者要求时，才会计算值，是实时制造，一种 生产者-消费者 的关系；
   集合 是一个内存中的数据结构，它包含数据结构中目前的所有值——————集合中的每个元素都得先算出来才能添加到集合中，
   就像管理学中的供应商驱动：先把仓库装满，再开始卖.
5. 
